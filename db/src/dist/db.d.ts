/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface EventAttendees {
  createdAt: Generated<Timestamp | null>;
  eventId: string;
  id: Generated<string>;
  userId: string;
}

export interface Events {
  createdAt: Generated<Timestamp | null>;
  date: string;
  id: Generated<string>;
  imageUrl: string | null;
  location: string;
  organization: string;
  time: string;
  title: string;
  updatedAt: Generated<Timestamp | null>;
}

export interface Friendships {
  createdAt: Generated<Timestamp | null>;
  friendId: string;
  id: Generated<string>;
  userId: string;
}

export interface KyselyMigrations {
  name: string;
  timestamp: string;
}

export interface KyselyMigrationsLock {
  id: string;
  isLocked: Generated<number>;
}

export interface Users {
  createdAt: Generated<Timestamp | null>;
  email: string;
  id: Generated<string>;
  imageUrl: string | null;
  interests: string[] | null;
  location: string | null;
  major: string;
  name: string;
  updatedAt: Generated<Timestamp | null>;
  year: string;
}

export interface DB {
  eventAttendees: EventAttendees;
  events: Events;
  friendships: Friendships;
  kyselyMigrations: KyselyMigrations;
  kyselyMigrationsLock: KyselyMigrationsLock;
  users: Users;
}
